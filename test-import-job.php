<?php

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ProcessImportJob
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 *   php test-import-job.php
 */

require __DIR__ . '/vendor/autoload.php';

use Illuminate\Foundation\Application;

$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();

use App\Models\Portal;
use App\Models\ImportJob;
use App\Jobs\ProcessImportJob;
use Illuminate\Support\Facades\Storage;

echo "=== –¢–µ—Å—Ç ProcessImportJob ===\n\n";

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ—Ä—Ç–∞–ª–∞
echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞–ª–∞...\n";
$portal = Portal::first();

if (!$portal) {
    echo "‚ùå –ü–æ—Ä—Ç–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ—Ä—Ç–∞–ª –≤ –ë–î.\n";
    echo "   –ü—Ä–∏–º–µ—Ä:\n";
    echo "   INSERT INTO portals (member_id, domain, access_token, refresh_token, expires_at, created_at, updated_at)\n";
    echo "   VALUES ('test123', 'your-portal.bitrix24.ru', 'your_token', 'your_refresh', NOW() + INTERVAL 1 HOUR, NOW(), NOW());\n";
    exit(1);
}

echo "‚úÖ –ü–æ—Ä—Ç–∞–ª –Ω–∞–π–¥–µ–Ω: {$portal->domain}\n\n";

// 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π CSV —Ñ–∞–π–ª
echo "2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞...\n";

$testData = [
    ['–ù–∞–∑–≤–∞–Ω–∏–µ', '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π', '–°—É–º–º–∞', '–ê–∫—Ç–∏–≤–µ–Ω'],
    ['–¢–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç 1', '01.01.2024', '1', '1000.50', '–î–∞'],
    ['–¢–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç 2', '15.02.2024', '1', '2500', '–ù–µ—Ç'],
    ['–¢–µ—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç 3', '20.03.2024', '1', '3750.75', '–î–∞'],
];

$csvContent = '';
foreach ($testData as $row) {
    $csvContent .= implode(';', $row) . "\n";
}

$filename = 'test_import_' . time() . '.csv';
$filepath = 'imports/' . $filename;

Storage::put($filepath, $csvContent);

if (!Storage::exists($filepath)) {
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª\n";
    exit(1);
}

echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {$filename}\n\n";

// 3. –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –∏–º–ø–æ—Ä—Ç–∞
echo "3. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–º–ø–æ—Ä—Ç–∞...\n";

$importJob = ImportJob::create([
    'portal_id' => $portal->id,
    'status' => 'pending',
    'original_filename' => $filename,
    'stored_filepath' => $filepath,
    'field_mappings' => [
        [
            'source_column' => '–ù–∞–∑–≤–∞–Ω–∏–µ',
            'target_field' => 'TITLE',
        ],
        [
            'source_column' => '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
            'target_field' => 'CREATED_DATE',
            'transform' => 'date',
            'date_format' => 'd.m.Y',
        ],
        [
            'source_column' => '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π',
            'target_field' => 'ASSIGNED_BY_ID',
            'transform' => 'user',
        ],
        [
            'source_column' => '–°—É–º–º–∞',
            'target_field' => 'OPPORTUNITY',
            'transform' => 'number',
        ],
        [
            'source_column' => '–ê–∫—Ç–∏–≤–µ–Ω',
            'target_field' => 'IS_ACTIVE',
            'transform' => 'boolean',
        ],
    ],
    'settings' => [
        'entity_type_id' => 128, // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ —Å–º–∞—Ä—Ç-–ø—Ä–æ—Ü–µ—Å—Å–∞
        'duplicate_handling' => 'skip',
        'batch_size' => 10,
    ],
    'total_rows' => 0,
    'processed_rows' => 0,
]);

echo "‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ ID: {$importJob->id}\n\n";

// 4. –í–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–ø—É—Å–∫–∞
echo "4. –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏...\n";
echo "   –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:\n";
echo "   a) –°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ª–∞–¥–∫–∏)\n";
echo "   b) –ß–µ—Ä–µ–∑ –æ—á–µ—Ä–µ–¥—å (production —Ä–µ–∂–∏–º)\n\n";

$mode = readline("   –í—ã–±–æ—Ä (a/b): ");

if ($mode === 'b') {
    echo "\n   –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ –æ—á–µ—Ä–µ–¥—å...\n";
    dispatch(new ProcessImportJob($importJob->id));

    echo "‚úÖ –ó–∞–¥–∞—á–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å\n\n";
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–æ—Ä–∫–µ—Ä –≤ –¥—Ä—É–≥–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:\n";
    echo "   php artisan queue:work\n\n";
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:\n";
    echo "   curl http://localhost:8000/api/import/{$importJob->id}/status\n\n";

} else {
    echo "\n   –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫...\n";
    echo "   (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è)\n\n";

    try {
        $job = new ProcessImportJob($importJob->id);
        $job->handle();

        echo "‚úÖ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n\n";

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        $importJob->refresh();

        echo "5. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n";
        echo "   –°—Ç–∞—Ç—É—Å: {$importJob->status}\n";
        echo "   –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {$importJob->total_rows}\n";
        echo "   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {$importJob->processed_rows}\n";
        echo "   –ü—Ä–æ–≥—Ä–µ—Å—Å: {$importJob->getProgressPercentage()}%\n";

        if ($importJob->error_details) {
            echo "   –û—à–∏–±–∫–∏: " . json_encode($importJob->error_details, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "\n";
        }

        echo "\n";

        if ($importJob->status === 'completed') {
            echo "üéâ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!\n";
            echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–º–∞—Ä—Ç-–ø—Ä–æ—Ü–µ—Å—Å –≤ –ë–∏—Ç—Ä–∏–∫—Å24\n";
        } else {
            echo "‚ö†Ô∏è  –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: {$importJob->status}\n";
        }

    } catch (\Exception $e) {
        echo "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:\n";
        echo "   " . $e->getMessage() . "\n";
        echo "   –§–∞–π–ª: " . $e->getFile() . ":" . $e->getLine() . "\n\n";

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        $importJob->refresh();

        if ($importJob->error_details) {
            echo "   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\n";
            echo "   " . json_encode($importJob->error_details, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "\n";
        }
    }
}

echo "\n=== –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω ===\n";

